// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:

	DMux8Way(in=load, sel=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
	RAM64(in=in, load=a, address=address[0..5], out=Outa); /// 000 111 - Range of possible addresses
	RAM64(in=in, load=b, address=address[0..5], out=Outb); /// 001 111
	RAM64(in=in, load=c, address=address[0..5], out=Outc); /// 010 111
	RAM64(in=in, load=d, address=address[0..5], out=Outd); /// 011 111

	RAM64(in=in, load=e, address=address[0..5], out=Oute); /// 100 111
	RAM64(in=in, load=f, address=address[0..5], out=Outf); /// 101 111
	RAM64(in=in, load=g, address=address[0..5], out=Outg); /// 110 111
	RAM64(in=in, load=h, address=address[0..5], out=Outh); /// 111 111
	Mux8Way16(a=Outa, b=Outb, c=Outc, d=Outd, e=Oute, f=Outf, g=Outg, h=Outh, sel=address[6..8], out=out);
}