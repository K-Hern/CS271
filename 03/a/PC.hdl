// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

		

	Inc16(in=pastIn, out=Inked16); //Preforming Increment to potentially be used later
	Mux16(a=pastIn, b=Inked16, sel=inc, out=InkedOut); //Pass previous result if inc false, or Incremented result if true

	Mux16(a=InkedOut, b=in, sel=load, out=LoadOut); // Pass Incremented result if load false, or in if true
	Mux16(a=LoadOut, b=false, sel=reset, out=ResetOut); // Pass Load result if reset false, or reset if true
	

	Register(in=ResetOut, load=true, out=pastIn, out=out); // Always saving result, but outputting 2 - one for future chip use and out


	
	

	
}
